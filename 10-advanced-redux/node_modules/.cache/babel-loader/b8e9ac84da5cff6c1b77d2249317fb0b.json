{"ast":null,"code":"// import { useDispatch } from 'react-redux';\n// import { cartActions } from '../../store/cart-slice';\n// import Card from '../UI/Card';\n// import classes from './ProductItem.module.css';\n// const ProductItem = (props) => {\n//   //const cart = useSelector((state) => state.cart);\n//   const dispatch = useDispatch();\n//   const { title, price, description, id } = props;\n//   const addToCartHandler = () => {\n//     // const newTotalQuantity = cart.totalQuantity + 1;\n//     // const updatedItems = cart.items.slice(); // create copy via slice to avoid mutating original state\n//     // const existingItem = updatedItems.find((item) => item.id === id);\n//     // if (existingItem) {\n//     //   const updatedItem = { ...existingItem }; // new object + copy existing properties to avoid state mutation\n//     //   updatedItem.quantity++;\n//     //   updatedItem.totalPrice = updatedItem.totalPrice + price;\n//     //   const existingItemIndex = updatedItems.findIndex(\n//     //     (item) => item.id === id\n//     //   );\n//     //   updatedItems[existingItemIndex] = updatedItem;\n//     // } else {\n//     //   updatedItems.push({\n//     //     id: id,\n//     //     price: price,\n//     //     quantity: 1,\n//     //     totalPrice: price,\n//     //     name: title,\n//     //   });\n//     // }\n//     // const newCart = {\n//     //   totalQuantity: newTotalQuantity,\n//     //   items: updatedItems,\n//     // };\n//     // dispatch(cartActions.replaceCart(newCart));\n//     // and then send Http request\n//     // fetch('firebase-url', { method: 'POST', body: JSON.stringify(newCart) })\n//     // dispatch(\n//     //   cartActions.addItemToCart({\n//     //     id,\n//     //     title,\n//     //     price,\n//     //   })\n//     // );\n//   };\n//   return (\n//     <li className={classes.item}>\n//       <Card>\n//         <header>\n//           <h3>{title}</h3>\n//           <div className={classes.price}>${price.toFixed(2)}</div>\n//         </header>\n//         <p>{description}</p>\n//         <div className={classes.actions}>\n//           <button onClick={addToCartHandler}>Add to Cart</button>\n//         </div>\n//       </Card>\n//     </li>\n//   );\n// };\n// export default ProductItem;\n// import { useDispatch } from \"react-redux\";\n// import { cartActions } from \"../../store/cart-slice\";\n// import Card from \"../UI/Card\";\n// import classes from \"./ProductItem.module.css\";\n// const ProductItem = (props) => {\n//   const dispatch = useDispatch();\n//   const { title, price, description, id } = props;\n//   const addToCartHandler = () => {\n//     dispatch(\n//       cartActions.addItemToCart({\n//         id: id,\n//         title: title,\n//         price: price,\n//       })\n//     );\n//   };\n//   return (\n//     <li className={classes.item}>\n//       <Card>\n//         <header>\n//           <h3>{title}</h3>\n//           <div className={classes.price}>${price.toFixed(2)}</div>\n//         </header>\n//         <p>{description}</p>\n//         <div className={classes.actions}>\n//           <button onClick={addToCartHandler}>Add to Cart</button>\n//         </div>\n//       </Card>\n//     </li>\n//   );\n// };\n// export default ProductItem;","map":{"version":3,"names":[],"sources":["C:/Users/2048710/Downloads/React/10-advanced-redux/src/components/Shop/ProductItem.js"],"sourcesContent":["// import { useDispatch } from 'react-redux';\n\n// import { cartActions } from '../../store/cart-slice';\n// import Card from '../UI/Card';\n// import classes from './ProductItem.module.css';\n\n// const ProductItem = (props) => {\n//   //const cart = useSelector((state) => state.cart);\n//   const dispatch = useDispatch();\n\n//   const { title, price, description, id } = props;\n\n//   const addToCartHandler = () => {\n//     // const newTotalQuantity = cart.totalQuantity + 1;\n\n//     // const updatedItems = cart.items.slice(); // create copy via slice to avoid mutating original state\n//     // const existingItem = updatedItems.find((item) => item.id === id);\n//     // if (existingItem) {\n//     //   const updatedItem = { ...existingItem }; // new object + copy existing properties to avoid state mutation\n//     //   updatedItem.quantity++;\n//     //   updatedItem.totalPrice = updatedItem.totalPrice + price;\n//     //   const existingItemIndex = updatedItems.findIndex(\n//     //     (item) => item.id === id\n//     //   );\n//     //   updatedItems[existingItemIndex] = updatedItem;\n//     // } else {\n//     //   updatedItems.push({\n//     //     id: id,\n//     //     price: price,\n//     //     quantity: 1,\n//     //     totalPrice: price,\n//     //     name: title,\n//     //   });\n//     // }\n\n//     // const newCart = {\n//     //   totalQuantity: newTotalQuantity,\n//     //   items: updatedItems,\n//     // };\n\n//     // dispatch(cartActions.replaceCart(newCart));\n\n//     // and then send Http request\n//     // fetch('firebase-url', { method: 'POST', body: JSON.stringify(newCart) })\n\n//     // dispatch(\n//     //   cartActions.addItemToCart({\n//     //     id,\n//     //     title,\n//     //     price,\n//     //   })\n//     // );\n//   };\n\n//   return (\n//     <li className={classes.item}>\n//       <Card>\n//         <header>\n//           <h3>{title}</h3>\n//           <div className={classes.price}>${price.toFixed(2)}</div>\n//         </header>\n//         <p>{description}</p>\n//         <div className={classes.actions}>\n//           <button onClick={addToCartHandler}>Add to Cart</button>\n//         </div>\n//       </Card>\n//     </li>\n//   );\n// };\n\n// export default ProductItem;\n\n\n// import { useDispatch } from \"react-redux\";\n// import { cartActions } from \"../../store/cart-slice\";\n// import Card from \"../UI/Card\";\n// import classes from \"./ProductItem.module.css\";\n\n// const ProductItem = (props) => {\n//   const dispatch = useDispatch();\n\n//   const { title, price, description, id } = props;\n\n//   const addToCartHandler = () => {\n//     dispatch(\n//       cartActions.addItemToCart({\n//         id: id,\n//         title: title,\n//         price: price,\n//       })\n//     );\n//   };\n\n//   return (\n//     <li className={classes.item}>\n//       <Card>\n//         <header>\n//           <h3>{title}</h3>\n//           <div className={classes.price}>${price.toFixed(2)}</div>\n//         </header>\n//         <p>{description}</p>\n//         <div className={classes.actions}>\n//           <button onClick={addToCartHandler}>Add to Cart</button>\n//         </div>\n//       </Card>\n//     </li>\n//   );\n// };\n\n// export default ProductItem;\n"],"mappings":"AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}