{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2048710\\\\Downloads\\\\React\\\\10-advanced-redux\\\\src\\\\components\\\\Shop\\\\ProductItem.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch } from 'react-redux';\nimport { cartActions } from '../../store/cart-slice';\nimport Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductItem = props => {\n  _s();\n\n  //const cart = useSelector((state) => state.cart);\n  const dispatch = useDispatch();\n  const {\n    title,\n    price,\n    description,\n    id\n  } = props;\n\n  const addToCartHandler = () => {// const newTotalQuantity = cart.totalQuantity + 1;\n    // const updatedItems = cart.items.slice(); // create copy via slice to avoid mutating original state\n    // const existingItem = updatedItems.find((item) => item.id === id);\n    // if (existingItem) {\n    //   const updatedItem = { ...existingItem }; // new object + copy existing properties to avoid state mutation\n    //   updatedItem.quantity++;\n    //   updatedItem.totalPrice = updatedItem.totalPrice + price;\n    //   const existingItemIndex = updatedItems.findIndex(\n    //     (item) => item.id === id\n    //   );\n    //   updatedItems[existingItemIndex] = updatedItem;\n    // } else {\n    //   updatedItems.push({\n    //     id: id,\n    //     price: price,\n    //     quantity: 1,\n    //     totalPrice: price,\n    //     name: title,\n    //   });\n    // }\n    // const newCart = {\n    //   totalQuantity: newTotalQuantity,\n    //   items: updatedItems,\n    // };\n    // dispatch(cartActions.replaceCart(newCart));\n    // and then send Http request\n    // fetch('firebase-url', { method: 'POST', body: JSON.stringify(newCart) })\n    // dispatch(\n    //   cartActions.addItemToCart({\n    //     id,\n    //     title,\n    //     price,\n    //   })\n    // );\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classes.item,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.price,\n          children: [\"$\", price.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addToCartHandler,\n          children: \"Add to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductItem, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ProductItem;\nexport default ProductItem; // import { useDispatch } from \"react-redux\";\n// import { cartActions } from \"../../store/cart-slice\";\n// import Card from \"../UI/Card\";\n// import classes from \"./ProductItem.module.css\";\n// const ProductItem = (props) => {\n//   const dispatch = useDispatch();\n//   const { title, price, description, id } = props;\n//   const addToCartHandler = () => {\n//     dispatch(\n//       cartActions.addItemToCart({\n//         id: id,\n//         title: title,\n//         price: price,\n//       })\n//     );\n//   };\n//   return (\n//     <li className={classes.item}>\n//       <Card>\n//         <header>\n//           <h3>{title}</h3>\n//           <div className={classes.price}>${price.toFixed(2)}</div>\n//         </header>\n//         <p>{description}</p>\n//         <div className={classes.actions}>\n//           <button onClick={addToCartHandler}>Add to Cart</button>\n//         </div>\n//       </Card>\n//     </li>\n//   );\n// };\n// export default ProductItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductItem\");","map":{"version":3,"names":["useDispatch","cartActions","Card","classes","ProductItem","props","dispatch","title","price","description","id","addToCartHandler","item","toFixed","actions"],"sources":["C:/Users/2048710/Downloads/React/10-advanced-redux/src/components/Shop/ProductItem.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\n\nimport { cartActions } from '../../store/cart-slice';\nimport Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\n\nconst ProductItem = (props) => {\n  //const cart = useSelector((state) => state.cart);\n  const dispatch = useDispatch();\n\n  const { title, price, description, id } = props;\n\n  const addToCartHandler = () => {\n    // const newTotalQuantity = cart.totalQuantity + 1;\n\n    // const updatedItems = cart.items.slice(); // create copy via slice to avoid mutating original state\n    // const existingItem = updatedItems.find((item) => item.id === id);\n    // if (existingItem) {\n    //   const updatedItem = { ...existingItem }; // new object + copy existing properties to avoid state mutation\n    //   updatedItem.quantity++;\n    //   updatedItem.totalPrice = updatedItem.totalPrice + price;\n    //   const existingItemIndex = updatedItems.findIndex(\n    //     (item) => item.id === id\n    //   );\n    //   updatedItems[existingItemIndex] = updatedItem;\n    // } else {\n    //   updatedItems.push({\n    //     id: id,\n    //     price: price,\n    //     quantity: 1,\n    //     totalPrice: price,\n    //     name: title,\n    //   });\n    // }\n\n    // const newCart = {\n    //   totalQuantity: newTotalQuantity,\n    //   items: updatedItems,\n    // };\n\n    // dispatch(cartActions.replaceCart(newCart));\n\n    // and then send Http request\n    // fetch('firebase-url', { method: 'POST', body: JSON.stringify(newCart) })\n\n    // dispatch(\n    //   cartActions.addItemToCart({\n    //     id,\n    //     title,\n    //     price,\n    //   })\n    // );\n  };\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addToCartHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n\n\n// import { useDispatch } from \"react-redux\";\n// import { cartActions } from \"../../store/cart-slice\";\n// import Card from \"../UI/Card\";\n// import classes from \"./ProductItem.module.css\";\n\n// const ProductItem = (props) => {\n//   const dispatch = useDispatch();\n\n//   const { title, price, description, id } = props;\n\n//   const addToCartHandler = () => {\n//     dispatch(\n//       cartActions.addItemToCart({\n//         id: id,\n//         title: title,\n//         price: price,\n//       })\n//     );\n//   };\n\n//   return (\n//     <li className={classes.item}>\n//       <Card>\n//         <header>\n//           <h3>{title}</h3>\n//           <div className={classes.price}>${price.toFixed(2)}</div>\n//         </header>\n//         <p>{description}</p>\n//         <div className={classes.actions}>\n//           <button onClick={addToCartHandler}>Add to Cart</button>\n//         </div>\n//       </Card>\n//     </li>\n//   );\n// };\n\n// export default ProductItem;\n"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AAEA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,0BAApB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B;EACA,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;EAEA,MAAM;IAAEO,KAAF;IAASC,KAAT;IAAgBC,WAAhB;IAA6BC;EAA7B,IAAoCL,KAA1C;;EAEA,MAAMM,gBAAgB,GAAG,MAAM,CAC7B;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IAEA;IAEA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;EACD,CAxCD;;EA0CA,oBACE;IAAI,SAAS,EAAER,OAAO,CAACS,IAAvB;IAAA,uBACE,QAAC,IAAD;MAAA,wBACE;QAAA,wBACE;UAAA,UAAKL;QAAL;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAK,SAAS,EAAEJ,OAAO,CAACK,KAAxB;UAAA,gBAAiCA,KAAK,CAACK,OAAN,CAAc,CAAd,CAAjC;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAKE;QAAA,UAAIJ;MAAJ;QAAA;QAAA;QAAA;MAAA,QALF,eAME;QAAK,SAAS,EAAEN,OAAO,CAACW,OAAxB;QAAA,uBACE;UAAQ,OAAO,EAAEH,gBAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CA9DD;;GAAMP,W;UAEaJ,W;;;KAFbI,W;AAgEN,eAAeA,WAAf,C,CAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}