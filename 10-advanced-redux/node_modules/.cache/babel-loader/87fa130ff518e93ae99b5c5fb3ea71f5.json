{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n      }\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice; // import { createSlice } from \"@reduxjs/toolkit\";\n// const cartSlice = createSlice({\n//   name: \"cart\",\n//   initialState: {\n//     items: [],\n//     totalQuantity: 0,\n//     totalAmount: 0,\n//   },\n//   reducers: {\n//     addItemToCart(state, action) {\n//       const newItem = action.payload;\n//       const existingItem = state.items.find((item) => item.id === newItem.id);\n//       state.totalQuantity++;\n//       if (!existingItem) {\n//         state.items.push({\n//           id: newItem.id,\n//           name: newItem.title,\n//           price: newItem.price,\n//           quantity: 1,\n//           totalPrice: newItem.price,\n//         });\n//       } else {\n//         existingItem.quantity++;\n//         existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n//       }\n//     },\n//     removeItemFromCart(state, action) {\n//       const id = action.payload;\n//       const existingItem = state.items.find((item) => item.id === id);\n//       state.totalQuantity--;\n//       if (existingItem.quantity === 1) {\n//         state.items = state.items.filter((item) => item.id !== id);\n//       } else {\n//         existingItem.quantity--;\n//         existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n//       }\n//     },\n//   },\n// });\n// export const cartActions = cartSlice.actions;\n// export default cartSlice;","map":{"version":3,"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","cartActions","actions"],"sources":["C:/Users/2048710/Downloads/React/10-advanced-redux/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { uiActions } from \"./ui-slice\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n  },\r\n  reducers: {\r\n    replaceCart(state, action) {\r\n      state.totalQuantity = action.payload.totalQuantity;\r\n      state.items = action.payload.items;\r\n    },\r\n    addItemToCart(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      state.totalQuantity++;\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n          name: newItem.title,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n      }\r\n    },\r\n    removeItemFromCart(state, action) {\r\n      const id = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === id);\r\n      state.totalQuantity--;\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.id !== id);\r\n      } else {\r\n        existingItem.quantity--;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\n\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;\r\n\r\n// import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n// const cartSlice = createSlice({\r\n//   name: \"cart\",\r\n//   initialState: {\r\n//     items: [],\r\n//     totalQuantity: 0,\r\n//     totalAmount: 0,\r\n//   },\r\n//   reducers: {\r\n//     addItemToCart(state, action) {\r\n//       const newItem = action.payload;\r\n//       const existingItem = state.items.find((item) => item.id === newItem.id);\r\n//       state.totalQuantity++;\r\n//       if (!existingItem) {\r\n//         state.items.push({\r\n//           id: newItem.id,\r\n//           name: newItem.title,\r\n//           price: newItem.price,\r\n//           quantity: 1,\r\n//           totalPrice: newItem.price,\r\n//         });\r\n//       } else {\r\n//         existingItem.quantity++;\r\n//         existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n//       }\r\n//     },\r\n//     removeItemFromCart(state, action) {\r\n//       const id = action.payload;\r\n//       const existingItem = state.items.find((item) => item.id === id);\r\n//       state.totalQuantity--;\r\n\r\n//       if (existingItem.quantity === 1) {\r\n//         state.items = state.items.filter((item) => item.id !== id);\r\n//       } else {\r\n//         existingItem.quantity--;\r\n//         existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n//       }\r\n//     },\r\n//   },\r\n// });\r\n\r\n// export const cartActions = cartSlice.actions;\r\n// export default cartSlice;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC5BG,IAAI,EAAE,MADsB;EAE5BC,YAAY,EAAE;IACZC,KAAK,EAAE,EADK;IAEZC,aAAa,EAAE;EAFH,CAFc;EAM5BC,QAAQ,EAAE;IACRC,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgB;MACzBD,KAAK,CAACH,aAAN,GAAsBI,MAAM,CAACC,OAAP,CAAeL,aAArC;MACAG,KAAK,CAACJ,KAAN,GAAcK,MAAM,CAACC,OAAP,CAAeN,KAA7B;IACD,CAJO;;IAKRO,aAAa,CAACH,KAAD,EAAQC,MAAR,EAAgB;MAC3B,MAAMG,OAAO,GAAGH,MAAM,CAACC,OAAvB;MACA,MAAMG,YAAY,GAAGL,KAAK,CAACJ,KAAN,CAAYU,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,OAAO,CAACI,EAA/C,CAArB;MACAR,KAAK,CAACH,aAAN;;MACA,IAAI,CAACQ,YAAL,EAAmB;QACjBL,KAAK,CAACJ,KAAN,CAAYa,IAAZ,CAAiB;UACfD,EAAE,EAAEJ,OAAO,CAACI,EADG;UAEfE,KAAK,EAAEN,OAAO,CAACM,KAFA;UAGfC,QAAQ,EAAE,CAHK;UAIfC,UAAU,EAAER,OAAO,CAACM,KAJL;UAKfhB,IAAI,EAAEU,OAAO,CAACS;QALC,CAAjB;MAOD,CARD,MAQO;QACLR,YAAY,CAACM,QAAb;QACAN,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACO,UAAb,GAA0BR,OAAO,CAACM,KAA5D;MACD;IACF,CArBO;;IAsBRI,kBAAkB,CAACd,KAAD,EAAQC,MAAR,EAAgB;MAChC,MAAMO,EAAE,GAAGP,MAAM,CAACC,OAAlB;MACA,MAAMG,YAAY,GAAGL,KAAK,CAACJ,KAAN,CAAYU,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAvC,CAArB;MACAR,KAAK,CAACH,aAAN;;MACA,IAAIQ,YAAY,CAACM,QAAb,KAA0B,CAA9B,EAAiC;QAC/BX,KAAK,CAACJ,KAAN,GAAcI,KAAK,CAACJ,KAAN,CAAYmB,MAAZ,CAAoBR,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAzC,CAAd;MACD,CAFD,MAEO;QACLH,YAAY,CAACM,QAAb;MACD;IACF;;EA/BO;AANkB,CAAD,CAA7B;AA2CA,OAAO,MAAMK,WAAW,GAAGvB,SAAS,CAACwB,OAA9B;AAEP,eAAexB,SAAf,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA"},"metadata":{},"sourceType":"module"}