{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2048710\\\\Downloads\\\\React\\\\12-react-router-project\\\\src\\\\components\\\\quotes\\\\QuoteList.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = props => {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n  const sortedQuotes = s;\n\n  const changeSortingHandler = () => {\n    history.push(\"/quotes?sort=\" + (isSortingAscending ? \"desc\" : \"asc\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sorting,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeSortingHandler,\n        children: [\"Sort \", isSortingAscending ? \"Descending\" : \"Ascending\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: props.quotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteList, \"azjqGSEfmvz5+G/YRUZm7OceOpI=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = QuoteList;\nexport default QuoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"names":["Fragment","useLocation","useHistory","QuoteItem","classes","sortQuotes","quotes","ascending","sort","quoteA","quoteB","id","QuoteList","props","history","location","queryParams","URLSearchParams","search","isSortingAscending","get","sortedQuotes","s","changeSortingHandler","push","sorting","list","map","quote","author","text"],"sources":["C:/Users/2048710/Downloads/React/12-react-router-project/src/components/quotes/QuoteList.js"],"sourcesContent":["import { Fragment } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedQuotes = s\n  const changeSortingHandler = () => {\n    history.push(\"/quotes?sort=\" + (isSortingAscending ? \"desc\" : \"asc\"));\n  };\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {props.quotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAGA,MAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,SAAT,KAAuB;EACxC,OAAOD,MAAM,CAACE,IAAP,CAAY,CAACC,MAAD,EAASC,MAAT,KAAoB;IACrC,IAAIH,SAAJ,EAAe;MACb,OAAOE,MAAM,CAACE,EAAP,GAAYD,MAAM,CAACC,EAAnB,GAAwB,CAAxB,GAA4B,CAAC,CAApC;IACD,CAFD,MAEO;MACL,OAAOF,MAAM,CAACE,EAAP,GAAYD,MAAM,CAACC,EAAnB,GAAwB,CAAxB,GAA4B,CAAC,CAApC;IACD;EACF,CANM,CAAP;AAOD,CARD;;AAUA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAA;;EAC3B,MAAMC,OAAO,GAAGZ,UAAU,EAA1B;EACA,MAAMa,QAAQ,GAAGd,WAAW,EAA5B;EAEA,MAAMe,WAAW,GAAG,IAAIC,eAAJ,CAAoBF,QAAQ,CAACG,MAA7B,CAApB;EAEA,MAAMC,kBAAkB,GAAGH,WAAW,CAACI,GAAZ,CAAgB,MAAhB,MAA4B,KAAvD;EAEA,MAAMC,YAAY,GAAGC,CAArB;;EACA,MAAMC,oBAAoB,GAAG,MAAM;IACjCT,OAAO,CAACU,IAAR,CAAa,mBAAmBL,kBAAkB,GAAG,MAAH,GAAY,KAAjD,CAAb;EACD,CAFD;;EAGA,oBACE,QAAC,QAAD;IAAA,wBACE;MAAK,SAAS,EAAEf,OAAO,CAACqB,OAAxB;MAAA,uBACE;QAAQ,OAAO,EAAEF,oBAAjB;QAAA,oBACQJ,kBAAkB,GAAG,YAAH,GAAkB,WAD5C;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAME;MAAI,SAAS,EAAEf,OAAO,CAACsB,IAAvB;MAAA,UACGb,KAAK,CAACP,MAAN,CAAaqB,GAAb,CAAkBC,KAAD,iBAChB,QAAC,SAAD;QAEE,EAAE,EAAEA,KAAK,CAACjB,EAFZ;QAGE,MAAM,EAAEiB,KAAK,CAACC,MAHhB;QAIE,IAAI,EAAED,KAAK,CAACE;MAJd,GACOF,KAAK,CAACjB,EADb;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CA/BD;;GAAMC,S;UACYV,U,EACCD,W;;;KAFbW,S;AAiCN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}