{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2048710\\\\Downloads\\\\React\\\\12-react-router-project\\\\src\\\\pages\\\\QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport { Fragment } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport { Link } from \"react-router-dom\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport { useEffect } from \"react\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\"; // const DUMMY_QUOTES = [\n//   { id: \"q1\", author: \"AJ\", text: \"Actual text of the quote 1.\" },\n//   { id: \"q2\", author: \"BJ\", text: \"Actual text of the quote 2.\" },\n//   { id: \"q3\", author: \"CJ\", text: \"Actual text of the quote 3.\" },\n//   { id: \"q4\", author: \"DJ\", text: \"Actual text of the quote 4.\" },\n//   { id: \"q5\", author: \"EJ\", text: \"Actual text of the quote 5.\" },\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteDetail = () => {\n  _s();\n\n  const match = useRouteMatch();\n  const params = useParams();\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error\n  } = useHttp(getSingleQuote, true);\n  const {\n    quoteId\n  } = params;\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]); //const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\n\n  if (status === \"pending\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: \"No quote found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetail, \"FGQ1eQk76e4leYWPOsnaF/k4qkk=\", false, function () {\n  return [useRouteMatch, useParams, useHttp];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"names":["useParams","Fragment","Route","Comments","HighlightedQuote","Link","useRouteMatch","useHttp","getSingleQuote","useEffect","LoadingSpinner","QuoteDetail","match","params","sendRequest","status","data","loadedQuote","error","quoteId","quote","text","author","path","url"],"sources":["C:/Users/2048710/Downloads/React/12-react-router-project/src/pages/QuoteDetail.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport { Fragment } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\nimport { useEffect } from \"react\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\n// const DUMMY_QUOTES = [\r\n//   { id: \"q1\", author: \"AJ\", text: \"Actual text of the quote 1.\" },\r\n//   { id: \"q2\", author: \"BJ\", text: \"Actual text of the quote 2.\" },\r\n//   { id: \"q3\", author: \"CJ\", text: \"Actual text of the quote 3.\" },\r\n//   { id: \"q4\", author: \"DJ\", text: \"Actual text of the quote 4.\" },\r\n//   { id: \"q5\", author: \"EJ\", text: \"Actual text of the quote 5.\" },\r\n// ];\r\n\r\nconst QuoteDetail = () => {\r\n  const match = useRouteMatch();\r\n  const params = useParams();\r\n\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuote,\r\n    error,\r\n  } = useHttp(getSingleQuote, true);\r\n\r\n  const { quoteId } = params;\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n\r\n  //const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner></LoadingSpinner>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!quote) {\r\n    return <p className=\"centered\">No quote found!</p>;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote\r\n        text={quote.text}\r\n        author={quote.author}\r\n      ></HighlightedQuote>\r\n      <Route path={match.path} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments></Comments>\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,cAAP,MAA2B,iCAA3B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACxB,MAAMC,KAAK,GAAGN,aAAa,EAA3B;EACA,MAAMO,MAAM,GAAGb,SAAS,EAAxB;EAEA,MAAM;IACJc,WADI;IAEJC,MAFI;IAGJC,IAAI,EAAEC,WAHF;IAIJC;EAJI,IAKFX,OAAO,CAACC,cAAD,EAAiB,IAAjB,CALX;EAOA,MAAM;IAAEW;EAAF,IAAcN,MAApB;EAEAJ,SAAS,CAAC,MAAM;IACdK,WAAW,CAACK,OAAD,CAAX;EACD,CAFQ,EAEN,CAACL,WAAD,EAAcK,OAAd,CAFM,CAAT,CAbwB,CAiBxB;;EACA,IAAIJ,MAAM,KAAK,SAAf,EAA0B;IACxB,oBACE;MAAK,SAAS,EAAC,UAAf;MAAA,uBACE,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;EAED,IAAI,CAACK,KAAL,EAAY;IACV,oBAAO;MAAG,SAAS,EAAC,UAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EACD,oBACE,QAAC,QAAD;IAAA,wBACE,QAAC,gBAAD;MACE,IAAI,EAAEA,KAAK,CAACC,IADd;MAEE,MAAM,EAAED,KAAK,CAACE;IAFhB;MAAA;MAAA;MAAA;IAAA,QADF,eAKE,QAAC,KAAD;MAAO,IAAI,EAAEV,KAAK,CAACW,IAAnB;MAAyB,KAAK,MAA9B;MAAA,uBACE;QAAK,SAAS,EAAC,UAAf;QAAA,uBACE,QAAC,IAAD;UAAM,SAAS,EAAC,WAAhB;UAA4B,EAAE,EAAG,GAAEX,KAAK,CAACY,GAAI,WAA7C;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QALF,eAYE,QAAC,KAAD;MAAO,IAAI,EAAG,GAAEZ,KAAK,CAACW,IAAK,WAA3B;MAAA,uBACE,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAZF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CA/CD;;GAAMZ,W;UACUL,a,EACCN,S,EAOXO,O;;;KATAI,W;AAiDN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}