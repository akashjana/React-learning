{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2048710\\\\Downloads\\\\React\\\\12-react-router-project\\\\src\\\\pages\\\\AllQuotes.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: \"q1\",\n  author: \"AJ\",\n  text: \"Actual text of the quote 1.\"\n}, {\n  id: \"q2\",\n  author: \"BJ\",\n  text: \"Actual text of the quote 2.\"\n}, {\n  id: \"q3\",\n  author: \"CJ\",\n  text: \"Actual text of the quote 3.\"\n}, {\n  id: \"q4\",\n  author: \"DJ\",\n  text: \"Actual text of the quote 4.\"\n}, {\n  id: \"q5\",\n  author: \"EJ\",\n  text: \"Actual text of the quote 5.\"\n}];\n\nconst AllQuotes = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(QuoteList, {\n    quotes: DUMMY_QUOTES\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AllQuotes, \"xmzqdF0SAq1bnsS9hD1yci6YQlY=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuotes;\nexport default AllQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"names":["useEffect","QuoteList","useHttp","getAllQuotes","DUMMY_QUOTES","id","author","text","AllQuotes","sendRequest","status","data","loadedQuotes","error"],"sources":["C:/Users/2048710/Downloads/React/12-react-router-project/src/pages/AllQuotes.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\n\r\nconst DUMMY_QUOTES = [\r\n  { id: \"q1\", author: \"AJ\", text: \"Actual text of the quote 1.\" },\r\n  { id: \"q2\", author: \"BJ\", text: \"Actual text of the quote 2.\" },\r\n  { id: \"q3\", author: \"CJ\", text: \"Actual text of the quote 3.\" },\r\n  { id: \"q4\", author: \"DJ\", text: \"Actual text of the quote 4.\" },\r\n  { id: \"q5\", author: \"EJ\", text: \"Actual text of the quote 5.\" },\r\n];\r\n\r\nconst AllQuotes = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuotes,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n  useEffect(()=>{\r\n    sendRequest()\r\n  },[]);\r\n  return <QuoteList quotes={DUMMY_QUOTES}></QuoteList>;\r\n};\r\n\r\nexport default AllQuotes;\r\n"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,YAA7B;;AAEA,MAAMC,YAAY,GAAG,CACnB;EAAEC,EAAE,EAAE,IAAN;EAAYC,MAAM,EAAE,IAApB;EAA0BC,IAAI,EAAE;AAAhC,CADmB,EAEnB;EAAEF,EAAE,EAAE,IAAN;EAAYC,MAAM,EAAE,IAApB;EAA0BC,IAAI,EAAE;AAAhC,CAFmB,EAGnB;EAAEF,EAAE,EAAE,IAAN;EAAYC,MAAM,EAAE,IAApB;EAA0BC,IAAI,EAAE;AAAhC,CAHmB,EAInB;EAAEF,EAAE,EAAE,IAAN;EAAYC,MAAM,EAAE,IAApB;EAA0BC,IAAI,EAAE;AAAhC,CAJmB,EAKnB;EAAEF,EAAE,EAAE,IAAN;EAAYC,MAAM,EAAE,IAApB;EAA0BC,IAAI,EAAE;AAAhC,CALmB,CAArB;;AAQA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACtB,MAAM;IACJC,WADI;IAEJC,MAFI;IAGJC,IAAI,EAAEC,YAHF;IAIJC;EAJI,IAKFX,OAAO,CAACC,YAAD,EAAe,IAAf,CALX;EAMAH,SAAS,CAAC,MAAI;IACZS,WAAW;EACZ,CAFQ,EAEP,EAFO,CAAT;EAGA,oBAAO,QAAC,SAAD;IAAW,MAAM,EAAEL;EAAnB;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAXD;;GAAMI,S;UAMAN,O;;;KANAM,S;AAaN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}