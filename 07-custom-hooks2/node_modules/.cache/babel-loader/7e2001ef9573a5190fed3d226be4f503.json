{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\n\nconst useHttp = (requestConfig, applyData) => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch( //   'https://react-http-demo-dc005-default-rtdb.firebaseio.com/tasks.json'\n      requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : 'GET',\n        headers: requestConfig.headers,\n        body: JSON.stringify(requestConfig.body)\n      });\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n      applyData(data); // const loadedTasks = [];\n      // for (const taskKey in data) {\n      //   loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n      // }\n      // setTasks(loadedTasks);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n\n    setIsLoading(false);\n  };\n\n  return {\n    isLoading: isLoading,\n    error: error,\n    sendRequest: sendRequest\n  };\n};\n\n_s(useHttp, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\n\nexport default useHttp;","map":{"version":3,"names":["useState","useHttp","requestConfig","applyData","isLoading","setIsLoading","error","setError","sendRequest","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","err","message"],"sources":["C:/Users/2048710/Downloads/React/07-custom-hooks2/src/hooks/use-http.js"],"sourcesContent":["import {useState} from 'react';\r\n\r\nconst useHttp=(requestConfig, applyData)=>{\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    \r\n    const sendRequest = async () => {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      try {\r\n        const response = await fetch(\r\n        //   'https://react-http-demo-dc005-default-rtdb.firebaseio.com/tasks.json'\r\n        requestConfig.url,{\r\n            method:requestConfig.method? requestConfig.method:'GET',\r\n            headers:requestConfig.headers,\r\n            body:JSON.stringify(requestConfig.body)\r\n        }\r\n        );\r\n  \r\n        if (!response.ok) {\r\n          throw new Error('Request failed!');\r\n        }\r\n  \r\n        const data = await response.json();\r\n        applyData(data);\r\n        // const loadedTasks = [];\r\n  \r\n        // for (const taskKey in data) {\r\n        //   loadedTasks.push({ id: taskKey, text: data[taskKey].text });\r\n        // }\r\n  \r\n        // setTasks(loadedTasks);\r\n      } catch (err) {\r\n        setError(err.message || 'Something went wrong!');\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n    return {\r\n        isLoading:isLoading,\r\n        error:error,\r\n        sendRequest:sendRequest\r\n    };\r\n};\r\n\r\nexport default useHttp;"],"mappings":";;AAAA,SAAQA,QAAR,QAAuB,OAAvB;;AAEA,MAAMC,OAAO,GAAC,CAACC,aAAD,EAAgBC,SAAhB,KAA4B;EAAA;;EACtC,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;;EAEA,MAAMQ,WAAW,GAAG,YAAY;IAC9BH,YAAY,CAAC,IAAD,CAAZ;IACAE,QAAQ,CAAC,IAAD,CAAR;;IACA,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,EAC5B;MACAR,aAAa,CAACS,GAFc,EAEV;QACdC,MAAM,EAACV,aAAa,CAACU,MAAd,GAAsBV,aAAa,CAACU,MAApC,GAA2C,KADpC;QAEdC,OAAO,EAACX,aAAa,CAACW,OAFR;QAGdC,IAAI,EAACC,IAAI,CAACC,SAAL,CAAed,aAAa,CAACY,IAA7B;MAHS,CAFU,CAA5B;;MASA,IAAI,CAACL,QAAQ,CAACQ,EAAd,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;MACD;;MAED,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAnB;MACAjB,SAAS,CAACgB,IAAD,CAAT,CAfE,CAgBF;MAEA;MACA;MACA;MAEA;IACD,CAvBD,CAuBE,OAAOE,GAAP,EAAY;MACZd,QAAQ,CAACc,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;IACD;;IACDjB,YAAY,CAAC,KAAD,CAAZ;EACD,CA9BD;;EA+BA,OAAO;IACHD,SAAS,EAACA,SADP;IAEHE,KAAK,EAACA,KAFH;IAGHE,WAAW,EAACA;EAHT,CAAP;AAKH,CAxCD;;GAAMP,O;;AA0CN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}