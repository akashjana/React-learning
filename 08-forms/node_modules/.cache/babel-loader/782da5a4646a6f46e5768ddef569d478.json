{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2048710\\\\Downloads\\\\React\\\\08-forms\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== \"\");\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangedHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInput(value => value.includes('@'));\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredNameIsValid && !enteredEmailIsValid) {\n      return;\n    }\n\n    console.log(enteredName, enteredEmail); // const enteredValue = nameInputRef.current.value;\n    // console.log(enteredValue);\n\n    resetNameInput();\n    resetEmailInput();\n  };\n\n  const nameinputClasses = nameInputHasError ? \"form-control invalid\" : \"form-control\";\n  const emailinputClasses = emailInputHasError ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameinputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: enteredName // ref={nameInputRef}\n        ,\n        type: \"text\",\n        id: \"name\",\n        onBlur: nameBlurHandler,\n        onChange: nameChangedHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailinputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: enteredEmail // ref={nameInputRef}\n        ,\n        type: \"email\",\n        id: \"email\",\n        onBlur: emailBlurHandler,\n        onChange: emailChangedHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a valid email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"GiOxCz0en5Eushp2eongSnkoG7Q=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","SimpleInput","props","value","enteredName","isValid","enteredNameIsValid","hasError","nameInputHasError","valueChangeHandler","nameChangedHandler","inputBlurHandler","nameBlurHandler","reset","resetNameInput","trim","enteredEmail","enteredEmailIsValid","emailInputHasError","emailChangedHandler","emailBlurHandler","resetEmailInput","includes","formIsValid","formSubmissionHandler","event","preventDefault","console","log","nameinputClasses","emailinputClasses","emailInputIsInvalid"],"sources":["C:/Users/2048710/Downloads/React/08-forms/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangedHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput,\n  } =useInput(value=>value.includes('@'));\n\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    if (!enteredNameIsValid && !enteredEmailIsValid) {\n      return;\n    }\n    console.log(enteredName, enteredEmail);\n    // const enteredValue = nameInputRef.current.value;\n    // console.log(enteredValue);\n    resetNameInput();\n    resetEmailInput();\n  };\n\n  const nameinputClasses = nameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const emailinputClasses = emailInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameinputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          value={enteredName}\n          // ref={nameInputRef}\n          type=\"text\"\n          id=\"name\"\n          onBlur={nameBlurHandler}\n          onChange={nameChangedHandler}\n        />\n        {nameInputHasError && (\n          <p className=\"error-text\">Name must not be empty.</p>\n        )}\n      </div>\n      <div className={emailinputClasses}>\n        <label htmlFor=\"email\">Your Email</label>\n        <input\n          value={enteredEmail}\n          // ref={nameInputRef}\n          type=\"email\"\n          id=\"email\"\n          onBlur={emailBlurHandler}\n          onChange={emailChangedHandler}\n        />\n        {emailInputIsInvalid && (\n          <p className=\"error-text\">Please enter a valid email.</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,oBAArB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAM;IACJC,KAAK,EAAEC,WADH;IAEJC,OAAO,EAAEC,kBAFL;IAGJC,QAAQ,EAAEC,iBAHN;IAIJC,kBAAkB,EAAEC,kBAJhB;IAKJC,gBAAgB,EAAEC,eALd;IAMJC,KAAK,EAAEC;EANH,IAOFd,QAAQ,CAAEG,KAAD,IAAWA,KAAK,CAACY,IAAN,OAAiB,EAA7B,CAPZ;EASA,MAAM;IACJZ,KAAK,EAAEa,YADH;IAEJX,OAAO,EAAEY,mBAFL;IAGJV,QAAQ,EAAEW,kBAHN;IAIJT,kBAAkB,EAAEU,mBAJhB;IAKJR,gBAAgB,EAAES,gBALd;IAMJP,KAAK,EAAEQ;EANH,IAOHrB,QAAQ,CAACG,KAAK,IAAEA,KAAK,CAACmB,QAAN,CAAe,GAAf,CAAR,CAPX;EASA,IAAIC,WAAW,GAAG,KAAlB;;EACA,IAAIjB,kBAAkB,IAAIW,mBAA1B,EAA+C;IAC7CM,WAAW,GAAG,IAAd;EACD;;EAED,MAAMC,qBAAqB,GAAIC,KAAD,IAAW;IACvCA,KAAK,CAACC,cAAN;;IAEA,IAAI,CAACpB,kBAAD,IAAuB,CAACW,mBAA5B,EAAiD;MAC/C;IACD;;IACDU,OAAO,CAACC,GAAR,CAAYxB,WAAZ,EAAyBY,YAAzB,EANuC,CAOvC;IACA;;IACAF,cAAc;IACdO,eAAe;EAChB,CAXD;;EAaA,MAAMQ,gBAAgB,GAAGrB,iBAAiB,GACtC,sBADsC,GAEtC,cAFJ;EAGA,MAAMsB,iBAAiB,GAAGZ,kBAAkB,GACxC,sBADwC,GAExC,cAFJ;EAIA,oBACE;IAAM,QAAQ,EAAEM,qBAAhB;IAAA,wBACE;MAAK,SAAS,EAAEK,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,KAAK,EAAEzB,WADT,CAEE;QAFF;QAGE,IAAI,EAAC,MAHP;QAIE,EAAE,EAAC,MAJL;QAKE,MAAM,EAAEQ,eALV;QAME,QAAQ,EAAEF;MANZ;QAAA;QAAA;QAAA;MAAA,QAFF,EAUGF,iBAAiB,iBAChB;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAeE;MAAK,SAAS,EAAEsB,iBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,OAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,KAAK,EAAEd,YADT,CAEE;QAFF;QAGE,IAAI,EAAC,OAHP;QAIE,EAAE,EAAC,OAJL;QAKE,MAAM,EAAEI,gBALV;QAME,QAAQ,EAAED;MANZ;QAAA;QAAA;QAAA;MAAA,QAFF,EAUGY,mBAAmB,iBAClB;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAfF,eA6BE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAQ,QAAQ,EAAE,CAACR,WAAnB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QA7BF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmCD,CA/ED;;GAAMtB,W;UAQAD,Q,EASDA,Q;;;KAjBCC,W;AAiFN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}